@model ThueXeVn.Models.car_made_model

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<link href="~/Scripts/dropzone/dropzone.min.css" rel="stylesheet" />

<h2>Create</h2>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>car_made_model</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.made, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.made, new { htmlAttributes = new { @class = "form-control" } })*@
                @Html.DropDownListFor(m => m.made, new SelectList(ViewBag.list_car, "Value", "Text"), "-Chọn tên hãng-", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.made, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.model, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.model, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.model, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="image" class="control-label col-md-2">Hình ảnh</label>
            <div class="col-md-10">
                @Html.HiddenFor(model => model.image)
                
                <div id="dzupanh1" class="dropzone">
                    <div class="dz-default dz-message" data-dz-message>
                        <span><i class="fa fa-plus fa-2x"></i> Chọn hoặc kéo ảnh muốn tải lên.</span>
                    </div>
                </div>

            </div>
        </div>

        @*<div class="form-group">
            <div class="col-md-10">
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    
    <script src="~/Scripts/dropzone/dropzone.min.js"></script>
    <script>
        $(document).ready(function () {
            Dropzone.autoDiscover = false;
            var hinhanhne = [];
            var myUpAnh = new Dropzone("div#dzupanh1", {
                url: "/carmademodel/upanh",
                addRemoveLinks: true,
                maxFiles: 1,
                maxFilesize: 5,
                uploadMultiple: true,
                acceptedFiles: "image/*",
                dictFallbackMessage: "Trình duyệt của bạn không hỗ trợ kéo thả tệp để tải lên.",
                dictFallbackText: "Please use the fallback form below to upload your files like in the olden days.",
                dictFileTooBig: "Tệp có dung lượng quá lớn ({{filesize}}MiB). Dung lượng cho phép: {{maxFilesize}}MiB.",
                dictInvalidFileType: "Tệp bạn chọn không được phép tải lên.",
                dictResponseError: "Máy chủ xảy ra lỗi: {{statusCode}}.",
                dictCancelUpload: "Hủy tải lên",
                dictCancelUploadConfirmation: "Bạn chắc chắn muốn hủy tải lên?",
                dictRemoveFile: "Loại bỏ tệp tin",
                success: function (file, response) {
                    var imgPath = response.Message;
                    if (imgPath !== "") {
                        $("#image").val(imgPath);
                        file.previewElement.classList.add("dz-success");
                    }

                },
                init: function () {
                    this.on("thumbnail", function (file) {
                        var w = file.width;
                        var h = file.height;
                        if (file.accepted !== false) {
                            // Do the dimension checks you want to do
                            if (w>=100 && h>=100) {
                                file.acceptDimensions();
                            }
                            else {
                                file.rejectDimensions();
                            }
                        }
                    })

                },
                accept: function (file, done) {
                    file.rejectDimensions = function () {
                        done("vui lòng ảnh có kích thước tối thiểu 100x100 px");
                    };
                    file.acceptDimensions = done;
                },
                error: function (file, response) {
                    file.previewElement.classList.add("dz-error");
                    $(file.previewElement).find('.dz-error-message').text(response);
                    //alert(response);
                    //this.removeFile(file);
                },
                HiddenFilesPath: 'body'                
            });
        })
    </script>
        
}
